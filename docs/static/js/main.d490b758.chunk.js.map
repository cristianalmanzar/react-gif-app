{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputCategory","setInputCategory","onSubmit","e","preventDefault","trim","length","cats","className","type","placeholder","value","onChange","target","GifGridItem","id","title","url","src","alt","getGifs","category","a","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","setImages","useEffect","then","imgs","key","GifExpertApp","categories","setCategories","i","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EAGAC,mBAAS,IAHT,mBAGnCC,EAHmC,KAGpBC,EAHoB,KAoB1C,OACI,oCACI,0BAAMC,SAXO,SAACC,GAClBA,EAAEC,iBACCJ,EAAcK,OAAOC,OAAS,IAE7BR,GAAa,SAAAS,GAAI,4BAASA,GAAT,CAAeP,OAChCC,EAAiB,MAMcO,UAAU,UACrC,2BACIC,KAAK,OACLD,UAAU,YACVE,YAAa,oBACbC,MAAOX,EACPY,SAvBU,SAACT,GAEvBF,EAAiBE,EAAEU,OAAOF,aCRrBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACpC,OACI,yBAAKT,UAAU,QACX,yBAAKU,IAAKD,EAAKE,IAAKH,M,uBCLnBI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbL,EAFa,iDAEsCI,EAFtC,+DAGEE,MAAMN,GAHR,cAGbO,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHd,GAAIc,EAAId,GACRC,MAAOa,EAAIb,MACXC,IAAG,UAAEY,EAAIC,cAAN,aAAE,EAAYC,iBAAiBd,QAVvB,kBAcZU,GAdY,4CAAH,sDCKPK,EAAU,SAAC,GAAgB,IAAfX,EAAc,EAAdA,SAAc,EAGPtB,mBAAS,IAHF,mBAG5B+B,EAH4B,KAGpBG,EAHoB,KAWnC,OANAC,qBAAW,WACPd,EAAQC,GAAUc,MAAM,SAAAC,GAAI,OAAIH,EAAUG,QAC5C,IAKE,oCACI,yBAAK5B,UAAU,aACX,wBAAIA,UAAU,UAAUa,GACxB,4BAEQS,EAAOF,KAAI,SAACC,GACR,OAAO,kBAAC,EAAD,eAAaQ,IAAKR,EAAId,IAAQc,WCmBlDS,EAlCM,WAAO,IAAD,EAGavC,mBAAS,CAAC,SAHvB,mBAGhBwC,EAHgB,KAGJC,EAHI,KAOvB,OACE,oCACE,yBAAKhC,UAAU,YACX,wBAAIA,UAAU,gBAAd,cACA,kBAAC,EAAD,CAAaV,YAAa0C,KAG9B,yBAAKhC,UAAU,aACX,4BAGQ+B,EAAWX,KAAK,SAACP,EAAUoB,GAAX,OACZ,kBAAC,EAAD,CACIpB,SAAUA,EACVgB,IAAKI,W,MCtBjCC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.d490b758.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategory}) => {\n\n\n    const [inputCategory, setInputCategory] = useState('');\n\n    const handleInputChange = (e) => {\n\n        setInputCategory(e.target.value);\n    }\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputCategory.trim().length > 0)\n        {\n            setCategory( cats => [ ...cats, inputCategory]);\n            setInputCategory('');\n        }\n    }\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}  className=\"center\">\n                <input\n                    type=\"text\"\n                    className=\"add-input\"\n                    placeholder={'Search in Gify...'}\n                    value={inputCategory}\n                    onChange={handleInputChange}\n                />\n            </form>\n        </>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategory: PropTypes.func.isRequired\n}\n\n\n\n","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n    return (\n        <div className=\"card\">\n            <img src={url} alt={title}></img>\n            {/* <p>{title}</p> */}\n        </div>\n    )\n}\n","export const getGifs = async( category) => {\n        \n    const url    = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=YwihnoYTwCczGyqrRQFYNGzGe1D4LqF7`;\n    const resp   = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map((img) => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React, {useState, useEffect} from 'react'\nimport { GifGridItem } from './GifGridItem';\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const GifGrid = ({category}) => {\n\n\n    const [images, setImages] = useState([]);\n\n    useEffect( () => {\n        getGifs(category).then( imgs => setImages(imgs));\n    },[]);\n\n\n    \n    return (\n        <>\n            <div className=\"card-grid\">\n                <h3 className=\"center\">{category}</h3>\n                <ol>\n                    {\n                        images.map((img) => {\n                            return <GifGridItem key={img.id} {...img}/>\n                        })\n                    }\n                </ol>\n            </div>\n        </>\n    )\n}\n","import React, {useState} from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\n\n\n\nconst GifExpertApp = () => {\n\n\n    const [categories, setCategories] = useState(['Goku'])\n\n   \n\n    return (\n      <>\n        <div className=\" header \">\n            <h2 className=\"header-title\">Gif Search</h2>\n            <AddCategory setCategory={setCategories}/>\n        </div>\n\n        <div className=\"container\">\n            <ol>\n                \n                {\n                    categories.map( (category, i) => \n                        <GifGrid \n                            category={category}\n                            key={i}\n                        />\n                    )\n                }\n            </ol>\n        </div>\n      </>\n    )\n}\n\n\n\n\nexport default GifExpertApp\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}